name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sunday at 2 AM
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Run npm audit
        run: |
          npm audit --json > npm-audit.json || true
          if [ -s npm-audit.json ]; then
            echo "::warning::npm audit found vulnerabilities"
            cat npm-audit.json | jq '.vulnerabilities | to_entries[] | select(.value.severity == "high" or .value.severity == "critical") | {name: .key, severity: .value.severity, title: .value.via[0].title}'
          fi
          
      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
  code-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          queries: security-extended
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Build Docker image
        run: docker build -t labflow:scan .
        
      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: labflow:scan
          format: 'sarif'
          output: 'trivy-container.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-container.sarif'
          
  secrets-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: |
            - auto
            - p/security-audit
            - p/owasp-top-ten
            - p/typescript
            - p/react
            
  firebase-rules-check:
    name: Firebase Security Rules Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Test Firestore Rules
        run: |
          cd functions
          yarn install
          firebase emulators:exec --only firestore "yarn test:rules"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Build application
        run: yarn build
        
      - name: Start server
        run: |
          yarn preview &
          sleep 10
          
      - name: Check security headers
        run: |
          curl -I http://localhost:4173 | grep -E "(X-Frame-Options|X-Content-Type-Options|X-XSS-Protection|Strict-Transport-Security|Content-Security-Policy)"
          
  compliance-check:
    name: HIPAA Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Check for PHI exposure
        run: |
          # Check for potential PHI in code
          ! grep -r -i -E "(ssn|social.?security|patient.?name|date.?of.?birth|medical.?record)" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" src/ | grep -v -E "(interface|type|class|function)"
          
      - name: Check encryption requirements
        run: |
          # Verify encryption is enforced
          grep -r "https://" src/ | wc -l
          ! grep -r "http://" src/ | grep -v localhost | grep -v "http://localhost"
          
      - name: Check audit logging
        run: |
          # Verify audit logging is implemented
          grep -r "auditLog" src/services/ | wc -l