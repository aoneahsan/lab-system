version: '3.8'

services:
  # Web application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
        - VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
        - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
        - VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
        - VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
        - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
        - VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
        - VITE_FIREBASE_DATABASE_URL=${VITE_FIREBASE_DATABASE_URL}
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - labflow-network

  # Firebase emulator for local development
  firebase-emulator:
    image: andreysenov/firebase-tools
    command: firebase emulators:start --import=./emulator-data --export-on-exit
    ports:
      - "4000:4000" # Emulator Suite UI
      - "5001:5001" # Functions
      - "9099:9099" # Auth
      - "8081:8081" # Firestore
      - "9199:9199" # Storage
    volumes:
      - ./firebase.json:/home/node/firebase.json
      - ./firestore.rules:/home/node/firestore.rules
      - ./firestore.indexes.json:/home/node/firestore.indexes.json
      - ./storage.rules:/home/node/storage.rules
      - ./functions:/home/node/functions
      - ./emulator-data:/home/node/emulator-data
    environment:
      - FIREBASE_PROJECT=${VITE_FIREBASE_PROJECT_ID}
    networks:
      - labflow-network
    profiles:
      - development

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - labflow-network
    profiles:
      - monitoring

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - labflow-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

  # Redis for caching (if needed)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - labflow-network
    profiles:
      - cache

networks:
  labflow-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  redis-data: